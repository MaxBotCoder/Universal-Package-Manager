This document will essentially be the bible for the project explaining what and how everything will be executed.
Hence develoupment for the Universal Package Manager aka U.P.M. will use this as referance material.

The goal is to provide a fast, efficent, secure and reliable way for develoupers to deploy apps on one sandboxed environment. 
Thus negating the need for developers to choose between supporting one OS very well or supporting many OSs poorly.
We aim to execute this by having the develoupers of this platform use an immutable blockchain based repo system to store their code and have it pulled down localy 
on to the user's computer which will then allow said to code to be compiled then then executed within a sandboxed environment.

Phase 1: Successfully create a blockchain based repo storing code on an Ethereum testnet (All NON-PROTOTYPE REPOS WILL BE ON THE MAINNET). 
Then proceed to Succesfully pull down the code to be ran locally on my computer (PRIOR TO SANDBOX)
Why?

Goal 1 of phase 1: Extract data from smart contract.

Goal 3 of phase 1: Have the Universal Package Manager interact with the file system and write to a text file.

Goal 4 of phase 1: Have the Universal Package Manager be capable of differentiating between coding lanaguages.

Goal 5 of phase 1: Have a proper file system with folders separating code that will be updated and replaces and data that will be stored long term like webbrowser data, game saves or even text documents.

Goal 6 of phase 1 (Relates to goal 1 of sandbox): The package manager would allow the sandboxed environment to run the code either by pre-compiling it into an executable format of some kind or
it might not compile the code if and only if the sandboxed environment will interperate the code only time will tell.

- Ethereum has fairly high gas fees, this means that in order to write to the etherium network an induvidual must pay a fee. Thus encouraging develoupers to think prior to uploading their code
preasuring them to make/upload higher quality code aswell as discouraging malicious players from uploading malicous code to the repos. 

Phase 2: Creating a sandboxed environment to run said code from the repos, similar to flatpak applications in which the sandboxed environments will be self contained, wont mess around with root.
The sandbox will initaly support linux & windows then will later support mac, etc.. hopefully the opensource nature of this project will encourage ports of this package manager to various different platforms.

Goal 1 of phase 2: Create sandboxed environment that can run code from the directories created by the package manager either by interperetation like a browser or via compilation.

Goal 2 of phase 2: Create support for daemons, intagrating them with the OS as if they were installed directly, this will allow for features like notifications, alarms various other system alerts or
essential background operations. 

Phase 3: Creating an easy to use GUI to work in unison with the pre-existing terminal interface which will be used. This interface will allow people to add/remove repos aswell as download apps, this
gui variant of U.P.M. will be dubbed the Universal App Store. 

Goal 1 of phase 3: Create a simple app displaying system which will show all of the packages available in alphabetical order.

Goal 2 of phase 3: Create a based search system.

Goal 3 of phase 3: Have a catagory called verrified apps, either from trusted repositories made by developers/companies porting and or developing on Universal Package manager.

Phase 4: Creat a simple to use app creation and or enhancing AI which will be trained on code uploaded to our repos or various other sources such as code from robust opensource application or the AI could be used for the (POSSIBLE) code interperetation system within the sandboxed environment.


